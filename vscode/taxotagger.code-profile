{"name":"TaxoTagger","icon":"snake","settings":"{\"settings\":\"{\\r\\n    \\\"editor.rulers\\\": [\\r\\n      80,\\r\\n      100\\r\\n    ],\\r\\n    \\\"[python]\\\": {\\r\\n      \\\"editor.formatOnSave\\\": true,\\r\\n      \\\"editor.defaultFormatter\\\": \\\"charliermarsh.ruff\\\",\\r\\n      \\\"editor.codeActionsOnSave\\\": {\\r\\n          \\\"source.fixAll.ruff\\\": \\\"explicit\\\",\\r\\n          \\\"source.organizeImports.ruff\\\": \\\"explicit\\\"\\r\\n      }\\r\\n    },\\r\\n    \\\"python.analysis.completeFunctionParens\\\": true,\\r\\n    \\\"python.languageServer\\\": \\\"Pylance\\\",\\r\\n    // python docstring\\r\\n    \\\"autoDocstring.docstringFormat\\\": \\\"google\\\",\\r\\n    // indentation\\r\\n    \\\"markdown.extension.list.indentationSize\\\": \\\"inherit\\\",\\r\\n    \\\"editor.detectIndentation\\\": false,\\r\\n    \\\"autoDocstring.customTemplatePath\\\": \\\"vscode/vscode_docstring_google_adapted.mustache\\\",\\r\\n    \\\"files.autoSave\\\": \\\"afterDelay\\\",\\r\\n    \\\"editor.renderWhitespace\\\": \\\"all\\\",\\r\\n    \\\"github.copilot.enable\\\": {\\r\\n        \\\"plaintext\\\": \\\"true\\\",\\r\\n        \\\"markdown\\\": \\\"true\\\"\\r\\n    },\\r\\n    \\\"editor.minimap.enabled\\\": false,\\r\\n    \\\"github.copilot.editor.enableAutoCompletions\\\": true,\\r\\n    \\\"cSpell.userWords\\\": [\\r\\n        \\\"cutoff\\\",\\r\\n        \\\"dtype\\\",\\r\\n        \\\"hypergeom\\\",\\r\\n        \\\"itertuples\\\",\\r\\n        \\\"metabolomics\\\",\\r\\n        \\\"ndarray\\\",\\r\\n        \\\"networkx\\\",\\r\\n        \\\"pckl\\\",\\r\\n        \\\"pickler\\\"\\r\\n    ],\\r\\n    \\\"cSpell.language\\\": \\\"en-GB\\\",\\r\\n    \\\"editor.accessibilitySupport\\\": \\\"off\\\",\\r\\n  }\\r\\n  \"}","keybindings":"{\"keybindings\":\"// Place your key bindings in this file to override the defaultsauto[]\\n[\\n    // Toggle semicolon ;\\n    { \\\"key\\\": \\\"cmd+;\\\",   \\\"command\\\": \\\"extension.toggleSemicolon\\\", \\\"when\\\": \\\"editorTextFocus\\\" },\\n    {\\n        \\\"key\\\": \\\"ctrl+j\\\",\\n        \\\"command\\\": \\\"-extension.vim_ctrl+j\\\",\\n        \\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+u\\\",\\n        \\\"command\\\": \\\"-editor.action.removeCommentLine\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    // Toggle between terminal and editor focus\\n    { \\\"key\\\": \\\"ctrl+`\\\", \\\"command\\\": \\\"workbench.action.terminal.focus\\\"},\\n    { \\\"key\\\": \\\"ctrl+`\\\", \\\"command\\\": \\\"workbench.action.focusActiveEditorGroup\\\", \\\"when\\\": \\\"terminalFocus\\\"},\\n    {\\n        \\\"key\\\": \\\"cmd+1\\\",\\n        \\\"command\\\": \\\"workbench.action.openEditorAtIndex1\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+1\\\",\\n        \\\"command\\\": \\\"-workbench.action.openEditorAtIndex1\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+2\\\",\\n        \\\"command\\\": \\\"workbench.action.focusSecondEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+2\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusSecondEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+2\\\",\\n        \\\"command\\\": \\\"workbench.action.openEditorAtIndex2\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+2\\\",\\n        \\\"command\\\": \\\"-workbench.action.openEditorAtIndex2\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+3\\\",\\n        \\\"command\\\": \\\"workbench.action.openEditorAtIndex3\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+3\\\",\\n        \\\"command\\\": \\\"-workbench.action.openEditorAtIndex3\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+4\\\",\\n        \\\"command\\\": \\\"workbench.action.openEditorAtIndex4\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+4\\\",\\n        \\\"command\\\": \\\"-workbench.action.openEditorAtIndex4\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+5\\\",\\n        \\\"command\\\": \\\"workbench.action.openEditorAtIndex5\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+5\\\",\\n        \\\"command\\\": \\\"-workbench.action.openEditorAtIndex5\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+6\\\",\\n        \\\"command\\\": \\\"workbench.action.openEditorAtIndex6\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+6\\\",\\n        \\\"command\\\": \\\"-workbench.action.openEditorAtIndex6\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+7\\\",\\n        \\\"command\\\": \\\"workbench.action.openEditorAtIndex7\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+7\\\",\\n        \\\"command\\\": \\\"-workbench.action.openEditorAtIndex7\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+8\\\",\\n        \\\"command\\\": \\\"workbench.action.openEditorAtIndex8\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+8\\\",\\n        \\\"command\\\": \\\"-workbench.action.openEditorAtIndex8\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+9\\\",\\n        \\\"command\\\": \\\"workbench.action.openEditorAtIndex9\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+9\\\",\\n        \\\"command\\\": \\\"-workbench.action.openEditorAtIndex9\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+3\\\",\\n        \\\"command\\\": \\\"workbench.action.focusThirdEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+3\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusThirdEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+6\\\",\\n        \\\"command\\\": \\\"workbench.action.focusSixthEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+6\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusSixthEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+7\\\",\\n        \\\"command\\\": \\\"workbench.action.focusSeventhEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+7\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusSeventhEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+4\\\",\\n        \\\"command\\\": \\\"workbench.action.focusFourthEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+4\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusFourthEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+5\\\",\\n        \\\"command\\\": \\\"workbench.action.focusFifthEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+5\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusFifthEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+8\\\",\\n        \\\"command\\\": \\\"workbench.action.focusEighthEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+8\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusEighthEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+f\\\",\\n        \\\"command\\\": \\\"workbench.explorer.fileView.focus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+o\\\",\\n        \\\"command\\\": \\\"outline.focus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+cmd+f\\\",\\n        \\\"command\\\": \\\"-workbench.action.toggleFullScreen\\\",\\n        \\\"when\\\": \\\"!isIOS\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+cmd+f\\\",\\n        \\\"command\\\": \\\"editor.action.formatDocument\\\",\\n        \\\"when\\\": \\\"editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f\\\",\\n        \\\"command\\\": \\\"-editor.action.formatDocument\\\",\\n        \\\"when\\\": \\\"editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+h\\\",\\n        \\\"command\\\": \\\"-extension.vim_ctrl+h\\\",\\n        \\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+h\\\",\\n        \\\"command\\\": \\\"-deleteLeft\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+s\\\",\\n        \\\"command\\\": \\\"-extension.vim_ctrl+s\\\",\\n        \\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+s\\\",\\n        \\\"command\\\": \\\"extension.dash.specific\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+h\\\",\\n        \\\"command\\\": \\\"-extension.dash.specific\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+s\\\",\\n        \\\"command\\\": \\\"-markdown.extension.editing.toggleStrikethrough\\\",\\n        \\\"when\\\": \\\"false\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+s\\\",\\n        \\\"command\\\": \\\"-saveAll\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+s\\\",\\n        \\\"command\\\": \\\"extension.dash.all\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+h\\\",\\n        \\\"command\\\": \\\"-extension.dash.all\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+h\\\",\\n        \\\"command\\\": \\\"-extension.dash.customSyntax\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+d\\\",\\n        \\\"command\\\": \\\"-editor.detectLanguage\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !notebookEditable\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+d\\\",\\n        \\\"command\\\": \\\"-notebook.cell.detectLanguage\\\",\\n        \\\"when\\\": \\\"notebookCellEditable && notebookEditable\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+d\\\",\\n        \\\"command\\\": \\\"extension.dash.emptySyntax\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+h\\\",\\n        \\\"command\\\": \\\"-extension.dash.emptySyntax\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    }\\n]\",\"platform\":1}","snippets":"{\"snippets\":{\"python.json\":\"\\n{\\n    \\\"if\\\": {\\n        \\\"prefix\\\": \\\"if\\\",\\n        \\\"body\\\": [\\\"if ${1:expression}:\\\", \\\"\\\\t${2:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for an if statement\\\"\\n    },\\n    \\\"if/else\\\": {\\n        \\\"prefix\\\": \\\"if/else\\\",\\n        \\\"body\\\": [\\\"if ${1:condition}:\\\", \\\"\\\\t${2:pass}\\\", \\\"else:\\\", \\\"\\\\t${3:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for an if statement with else\\\"\\n    },\\n    \\\"elif\\\": {\\n        \\\"prefix\\\": \\\"elif\\\",\\n        \\\"body\\\": [\\\"elif ${1:expression}:\\\", \\\"\\\\t${2:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for an elif\\\"\\n    },\\n    \\\"else\\\": {\\n        \\\"prefix\\\": \\\"else\\\",\\n        \\\"body\\\": [\\\"else:\\\", \\\"\\\\t${1:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for an else\\\"\\n    },\\n    \\\"while\\\": {\\n        \\\"prefix\\\": \\\"while\\\",\\n        \\\"body\\\": [\\\"while ${1:expression}:\\\", \\\"\\\\t${2:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a while loop\\\"\\n    },\\n    \\\"while/else\\\": {\\n        \\\"prefix\\\": \\\"while/else\\\",\\n        \\\"body\\\": [\\\"while ${1:expression}:\\\", \\\"\\\\t${2:pass}\\\", \\\"else:\\\", \\\"\\\\t${3:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a while loop with else\\\"\\n    },\\n    \\\"for\\\": {\\n        \\\"prefix\\\": \\\"for\\\",\\n        \\\"body\\\": [\\\"for ${1:target_list} in ${2:expression_list}:\\\", \\\"\\\\t${3:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a for loop\\\"\\n    },\\n    \\\"for/else\\\": {\\n        \\\"prefix\\\": \\\"for/else\\\",\\n        \\\"body\\\": [\\\"for ${1:target_list} in ${2:expression_list}:\\\", \\\"\\\\t${3:pass}\\\", \\\"else:\\\", \\\"\\\\t${4:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a for loop with else\\\"\\n    },\\n    \\\"try/except\\\": {\\n        \\\"prefix\\\": \\\"try/except\\\",\\n        \\\"body\\\": [\\\"try:\\\", \\\"\\\\t${1:pass}\\\", \\\"except ${2:expression} as ${3:identifier}:\\\", \\\"\\\\t${4:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a try/except statement\\\"\\n    },\\n    \\\"try/finally\\\": {\\n        \\\"prefix\\\": \\\"try/finally\\\",\\n        \\\"body\\\": [\\\"try:\\\", \\\"\\\\t${1:pass}\\\", \\\"finally:\\\", \\\"\\\\t${2:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a try/finally statement\\\"\\n    },\\n    \\\"try/except/else\\\": {\\n        \\\"prefix\\\": \\\"try/except/else\\\",\\n        \\\"body\\\": [\\n            \\\"try:\\\",\\n            \\\"\\\\t${1:pass}\\\",\\n            \\\"except ${2:expression} as ${3:identifier}:\\\",\\n            \\\"\\\\t${4:pass}\\\",\\n            \\\"else:\\\",\\n            \\\"\\\\t${5:pass}\\\"\\n        ],\\n        \\\"description\\\": \\\"Code snippet for a try/except/else statement\\\"\\n    },\\n    \\\"try/except/finally\\\": {\\n        \\\"prefix\\\": \\\"try/except/finally\\\",\\n        \\\"body\\\": [\\n            \\\"try:\\\",\\n            \\\"\\\\t${1:pass}\\\",\\n            \\\"except ${2:expression} as ${3:identifier}:\\\",\\n            \\\"\\\\t${4:pass}\\\",\\n            \\\"finally:\\\",\\n            \\\"\\\\t${5:pass}\\\"\\n        ],\\n        \\\"description\\\": \\\"Code snippet for a try/except/finally statement\\\"\\n    },\\n    \\\"try/except/else/finally\\\": {\\n        \\\"prefix\\\": \\\"try/except/else/finally\\\",\\n        \\\"body\\\": [\\n            \\\"try:\\\",\\n            \\\"\\\\t${1:pass}\\\",\\n            \\\"except ${2:expression} as ${3:identifier}:\\\",\\n            \\\"\\\\t${4:pass}\\\",\\n            \\\"else:\\\",\\n            \\\"\\\\t${5:pass}\\\",\\n            \\\"finally:\\\",\\n            \\\"\\\\t${6:pass}\\\"\\n        ],\\n        \\\"description\\\": \\\"Code snippet for a try/except/else/finally statement\\\"\\n    },\\n    \\\"with\\\": {\\n        \\\"prefix\\\": \\\"with\\\",\\n        \\\"body\\\": [\\\"with ${1:expression} as ${2:target}:\\\", \\\"\\\\t${3:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a with statement\\\"\\n    },\\n    \\\"def\\\": {\\n        \\\"prefix\\\": \\\"def\\\",\\n        \\\"body\\\": [\\\"def ${1:funcname}(${2:parameter_list}):\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", \\\"\\\\t${3:docstring}\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\",\\\"\\\\t${4:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a function definition\\\"\\n    },\\n    \\\"def(class method)\\\": {\\n        \\\"prefix\\\": \\\"def(class method)\\\",\\n        \\\"body\\\": [\\\"def ${1:funcname}(self, ${2:parameter_list}):\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", \\\"\\\\t${3:docstring}\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", \\\"\\\\t${4:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a class method\\\"\\n    },\\n    \\\"def(static class method)\\\": {\\n        \\\"prefix\\\": \\\"def(static class method)\\\",\\n        \\\"body\\\": [\\\"@staticmethod\\\", \\\"def ${1:funcname}(${2:parameter_list}):\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", \\\"\\\\t${3:docstring}\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", \\\"\\\\t${4:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a static class method\\\"\\n    },\\n    \\\"def(abstract class method)\\\": {\\n        \\\"prefix\\\": \\\"def(abstract class method)\\\",\\n        \\\"body\\\": [\\\"def ${1:funcname}(self, ${2:parameter_list}):\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", \\\"\\\\t${3:docstring}\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", \\\"\\\\traise NotImplementedError\\\"],\\n        \\\"description\\\": \\\"Code snippet for an abstract class method\\\"\\n    },\\n    \\\"class\\\": {\\n        \\\"prefix\\\": \\\"class\\\",\\n        \\\"body\\\": [\\\"class ${1:classname}(${2:object}):\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", \\\"\\\\t${3:docstring}\\\", \\\"\\\\t\\\\\\\"\\\\\\\"\\\\\\\"\\\", \\\"\\\\t${4:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a class definition\\\"\\n    },\\n    \\\"lambda\\\": {\\n        \\\"prefix\\\": \\\"lambda\\\",\\n        \\\"body\\\": [\\\"lambda ${1:parameter_list}: ${2:expression}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a lambda statement\\\"\\n    },\\n    \\\"if(main)\\\": {\\n        \\\"prefix\\\": \\\"__main__\\\",\\n        \\\"body\\\": [\\\"if __name__ == \\\\\\\"__main__\\\\\\\":\\\", \\\"    ${1:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for a `if __name__ == \\\\\\\"__main__\\\\\\\": ...` block\\\"\\n    },\\n    \\\"async/def\\\": {\\n        \\\"prefix\\\": \\\"async/def\\\",\\n        \\\"body\\\": [\\\"async def ${1:funcname}(${2:parameter_list}):\\\", \\\"\\\\t${3:pass}\\\"],\\n        \\\"description\\\": \\\"Code snippet for an async statement\\\"\\n    },\\n    \\\"async/for\\\": {\\n        \\\"prefix\\\": \\\"async/for\\\",\\n        \\\"body\\\": [\\\"async for ${1:target} in ${2:iter}:\\\", \\\"\\\\t${3:block}\\\"],\\n        \\\"description\\\": \\\"Code snippet for an async for statement\\\"\\n    },\\n    \\\"async/for/else\\\": {\\n        \\\"prefix\\\": \\\"async/for/else\\\",\\n        \\\"body\\\": [\\\"async for ${1:target} in ${2:iter}:\\\", \\\"\\\\t${3:block}\\\", \\\"else:\\\", \\\"\\\\t${4:block}\\\"],\\n        \\\"description\\\": \\\"Code snippet for an async for statement with else\\\"\\n    },\\n    \\\"async/with\\\": {\\n        \\\"prefix\\\": \\\"async/with\\\",\\n        \\\"body\\\": [\\\"async with ${1:expr} as ${2:var}:\\\", \\\"\\\\t${3:block}\\\"],\\n        \\\"description\\\": \\\"Code snippet for an async with statement\\\"\\n    }\\n}\"}}","extensions":"[{\"identifier\":{\"id\":\"charliermarsh.ruff\",\"uuid\":\"c2ca9b43-fa38-44fc-928e-5125970b9c00\"},\"displayName\":\"Ruff\",\"preRelease\":true},{\"identifier\":{\"id\":\"github.copilot\",\"uuid\":\"23c4aeee-f844-43cd-b53e-1113e483f1a6\"},\"displayName\":\"GitHub Copilot\"},{\"identifier\":{\"id\":\"github.copilot-chat\",\"uuid\":\"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f\"},\"displayName\":\"GitHub Copilot Chat\"},{\"identifier\":{\"id\":\"gruntfuggly.todo-tree\",\"uuid\":\"261cac81-cd7b-4555-bb41-0c2d2bcd3e70\"},\"displayName\":\"Todo Tree\"},{\"identifier\":{\"id\":\"ms-python.debugpy\",\"uuid\":\"4bd5d2c9-9d65-401a-b0b2-7498d9f17615\"},\"displayName\":\"Python Debugger\"},{\"identifier\":{\"id\":\"ms-python.python\",\"uuid\":\"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5\"},\"displayName\":\"Python\",\"preRelease\":true},{\"identifier\":{\"id\":\"ms-python.vscode-pylance\",\"uuid\":\"364d2426-116a-433a-a5d8-a5098dc3afbd\"},\"displayName\":\"Pylance\"},{\"identifier\":{\"id\":\"njpwerner.autodocstring\",\"uuid\":\"2d6fea35-f68e-461d-9b7b-5cd05be99451\"},\"displayName\":\"autoDocstring - Python Docstring Generator\"},{\"identifier\":{\"id\":\"sonarsource.sonarlint-vscode\",\"uuid\":\"a7fa941e-bcda-486f-8141-8483a6286177\"},\"displayName\":\"SonarLint\"},{\"identifier\":{\"id\":\"streetsidesoftware.code-spell-checker\",\"uuid\":\"f6dbd813-b0a0-42c1-90ea-10dde9d925a7\"},\"displayName\":\"Code Spell Checker\"},{\"identifier\":{\"id\":\"tamasfe.even-better-toml\",\"uuid\":\"b2215d5f-675e-4a2b-b6ac-1ca737518b78\"},\"displayName\":\"Even Better TOML\"},{\"identifier\":{\"id\":\"vscodevim.vim\",\"uuid\":\"d96e79c6-8b25-4be3-8545-0e0ecefcae03\"},\"displayName\":\"Vim\"}]"}